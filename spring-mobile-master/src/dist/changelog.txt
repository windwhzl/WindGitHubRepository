Spring Mobile Changelog
=======================

1.1.3.RELEASE (2014.10.06)
==========================
* Upgrade to Spring Framework 3.2.11 (MOBILE-114)
* Fixed an issue where AbstractSitePathUrlFactory did not handle empty paths correctly (MOBILE-113)

1.1.2.RELEASE (2014.06.06)
==========================
* Upgrade to Spring Framework 3.2.9 (MOBILE-111)
* Implement Ordered interface on AbstractDeviceDelegatingViewResolver (MOBILE-110)

1.1.1.RELEASE (2014.02.20)
==========================
* Upgrade to Spring Framework 3.2.8 (MOBILE-102)
* Upgrade build to use Gradle 1.11 (MOBILE-101)
* Added Windows 8 tests (MOBILE-99)
* Added tests for new iOS versions (MOBILE-98)
* Fixed an issue where some Samsung tablets were incorrectly being resolved as "mobile" devices (MOBILE-95)
* Added integration tests for testing against latest Spring Framework release and snapshot (MOBILE-92)
* Added Windows Phone tests (MOBILE-89)

1.1.0.RELEASE (2013.10.03)
==========================
* Upgrade to Spring Framework 3.2.4 (MOBILE-86)
* Update documentation

1.1.0.RC1 (2013.08.05)
======================
* Fixed an issue where LiteDeviceDelegatingViewResolver was incorrectly adjusting view names for "redirect:" and 
  "forward:" requests based on the type of requesting devices. (MOBILE-70)
* Firefox OS devices are now resolved to a mobile device in LiteDeviceResolver (MOBILE-79)
* Update build to use Javadoc hotfix plugin to address a frame injection vulnerability (MOBILE-81)
* Upgrade to Spring Framework 3.2.3 (MOBILE-80)
* Upgrade build to use Gradle 1.6 (MOBILE-75)

1.0.2.RELEASE (2013.08.05)
==========================
* Firefox OS devices are now resolved to a mobile device in LiteDeviceResolver (MOBILE-79)
* Now detecting Kindle Fire devices in LiteDeviceResolver (MOBILE-64)
    - Silk Desktop mode is detected as Tablet
    - Silk Mobile mode is detected as Mobile
    - Android webviews are also detected as Tablet
* Update build to use Javadoc hotfix plugin to address a frame injection vulnerability (MOBILE-81)
* Upgrade to Spring Framework 3.1.4 (MOBILE-82)
* Upgrade build to use Gradle 1.6 (MOBILE-75)

1.1.0.M3 (2013.04.04)
=====================
* Added factory method support for tablets when configuring SiteSwitcherHandlerInterceptor to use a custom domain
  strategy (MOBILE-73)
* Added additional factory methods to SiteSwitcherHandlerInterceptor to allow easier configuration when using a 
  custom domain strategy other than mDot or dotMobi (MOBILE-72)
* Upgraded to Spring Framework 3.2.2 (MOBILE-71)
* Fixed an issue in LiteDeviceDelegatingViewResolver where absolute URLs were not handled correctly when redirecting 
  to the mobile or tablet sites (MOBILE-70)
* Fixed an issue in AbstractSiteUrlFactory where querystring parameters were being dropped when the SiteSwitcher was 
  rewriting the URL for the mobile or tablet sites. (MOBILE-69) 
* Fixed an issue in AbstractSitePathUrlFactory where if a site path is configured with no slashes or only a trailing 
  slash path then formatPath(...) was overwriting parts of of the path (MOBILE-68)
* Updated build to test against Java 7 (MOBILE-66)
* Now detecting Kindle Fire devices in LiteDeviceResolver (MOBILE-64)
    - Silk Desktop mode is detected as Tablet
    - Silk Mobile mode is detected as Mobile
    - Android webviews are also detected as Tablet
* Fixed an issue in DeviceDelegatingViewResolver to remove an extra trailing slash in certain situations (MOBILE-63)
* Addressed an issue in SiteSwitcherRequestFilter to only call filterChain.doFilter(...) if the response has not 
  been committed (MOBILE-62)  
* Fixed an issue in SiteSwitcherRequestFilter where in certain situations, initFilterBean() was overwriting values 
  from the constructor (MOBILE-61)
* Updated build to use Gradle 1.4 (MOBILE-60)

1.1.0.M2 (2013.01.16)
=====================
* Updated to Spring Framework 3.2

* Added LiteDeviceDelegatingViewResolver, a ViewResolver implementation that adjusts the view name based on Device and 
  SitePreference.
    - Set prefixes for device types. Use a prefix to store your device specific views in different folders. For example, 
      the request for "home" results in the view name being adjusted as follows:
        setNormalPrefix("normal/") adjusts to "normal/home"
        setMobilePrefix("mobile/") adjusts to "mobile/home"
        setTabletPrefix("tablet/") adjusts to "tablet/home"
    - Set suffixes for device types. Use a suffix to store your device specific views with different extensions. For 
      example, the request for "home" results in the view name being adjusted as follows: 
        setNormalSuffix(".normal") adjusts to "home.normal"
        setMobileSuffix(".mobile") adjusts to "home.mobile"
        setTabletSuffix(".tablet") adjusts to "home.tablet"
    - Combinations of prefixes and suffixes are also supported 

* Updated dependencies to latest versions

1.1.0.M1 (2012.11.13)
=====================
* Added tablet support in SitePreference handling. Users can now specify a preference for a "tablet" site, in addition 
  to the existing "normal" and "mobile" preferences.

* Added tablet support in SiteSwitcher handling. 
    - The mDot and dotMobi factory methods now allow you to specify whether to return the "normal" or "mobile" sites 
      for tablet devices.
    - The urlPath factory method now adds the ability to specify a "tablet" site path. Tablet devices will 
      automatically be redirected to the "tablet" path, while mobile and normal devices will continue to be redirected 
      to the "normal" and "mobile" sites. For example, consider the following schema:
        Normal site: http://domain.com/home
        Mobile site: http://domain.com/mobile/home
        Tablet site: http://domain.com/tablet/home
    - SitePreference handling is fully integrated into SiteSwitcher handling. "normal", "mobile", and "tablet" 
      preferences are redirected to their respective sites, regardless of device type.

* Support for Java-based container configuration
    - Added DeviceHandlerMethodArgumentResolver which is a HandlerMethodArgumentResolver implementation of 
      DeviceWebArgumentResolver
    - Added SitePreferenceHandlerMethodArgumentResolver which is a HandlerMethodArgumentResolver implementation of 
      SitePreferenceWebArgumentResolver.

* Improved support for Servlet Filter configuration
    - Added SitePreferenceRequestFilter which is a Filter implementation of SitePreferenceHandlerInterceptor.
    - Added SiteSwitcherRequestFilter which is a Filter implementation of SiteSwitcherHandlerInterceptor.
    
    See https://github.com/spring-projects/spring-mobile-samples for sample projects that demonstrate these new features

1.0.1.RELEASE (2012.11.08)
==========================
* BlackBerry 10 mobile devices are now resolved to a mobile device in LiteDeviceResolver

1.0.0.RELEASE (2012.05.14)
==========================
* Renamed DeviceResolverHandlerFilter to DeviceResolverRequestFilter
* Documentation updates

1.0.0.RC2 (2012.04.20)
======================
* Tablets, and specifically iPads are no longer recognized as mobile devices
* Added support for resolving tablet devices in LiteDeviceResolver. 
    - The User-Agent is searched for the keywords "ipad", "playbook", and "hp-tablet"
    - If "android" is found, an additional check for whether the User-Agent contains "mobile" is performed. If it does 
      include "mobile", then the device is resolved as a mobile device. If not, then it is resolved as a tablet.
    
* Added a new DeviceType enumeration consisting of NORMAL, MOBILE, and TABLET values.
* The Device interface now includes isNormal(), and isTablet() methods in addition to the existing isMobile() method.
* WebOS devices are now recognized as a mobile device in LiteDeviceResolver
* Improved the SiteSwitcherHandlerInterceptor by adding an URL path alternative to "dotMobi" and "mDot" for site 
  switching. The switcher is now capable of switching between "normal" and "mobile" URL paths within the same domain. 
  For example an about page for a normal site may be "http://www.domain.com/about", and the mobile site may be 
  "http://www.domain.com/m/about"
    - The mobile path is configurable and is specified in the Spring configuration.
    - Additionally, the root path is also configurable, but not required. For example if your application exists at 
      "http://demo.com/showcase", then "/showcase" is the root path.

* You can now configure a list of "normal" User-Agent keywords in the LiteDeviceResolver. It may happen that a device 
  is falsely identified as mobile. This list of keywords takes precedence over the mobile and tablet keywords, 
  effectively overriding the default behavior.

1.0.0.RC1 (2012.02.06)
======================
* Added DeviceResolverHandlerFilter as an alternative to DeviceResolverHandlerInterceptor to support web.xml configurations.
* iPad is now recognized as a mobile device in LiteDeviceResolver.
* Better exception handling of invalid site_preference parameter in StandardSitePreferenceHandler.

1.0.0.M4 (2011.07.26)
=====================
* Split out Spring Mobile's WURFL integration into a separate project licensed under the same terms as the Wurfl Java 
  API (AGPL3)

1.0.0.M3 (2011.02.03)
=====================
* Extracted SitePreferenceHandler from SiteSwitcher to allow for standalone site preference management independent of 
  site switcher usage. See SitePreferenceHandlerInterceptor to enable in Spring MVC.
* Added SitePreference.isMobile() for convenient testing of a mobile site preference value using a boolean expression. 
  This is particularly useful for view templates e.g. ${currentSitePreference.mobile}
* Added DeviceUtils and SitePreferenceUtils for convenient lookup of the 'currentDevice' and 'currentSitePreference', 
  respectively.
* Simplified packaging by collapsing the device.mvc and device.lite sub-packages into the device root package. 
  M2 users: DeviceResolverHandlerInterceptor now resides in the root device package.
* Updated documentation to expand coverage of the feature set, and to demonstrate new MVC 3.1 features for enabling 
  Mobile extensions such as the Device and SitePreference argument-resolvers.
  (see the lite-showcase and wurfl-showcase samples at https://github.com/spring-projects/spring-mobile-samples for 
  working examples of the latest Spring MVC + Spring Mobile feature set)

1.0.0.M2 (2010.12.08)
=====================
* Renamed MobileRedirectHandlerInterceptor to SiteSwitcherHandlerInterceptor and made it considerably more capable:
    - In addition to switching from the "mobile" site to the "normal" site for mobile devices, the switcher is now 
      capable of switching from the "mobile" site to the "normal" site for non-mobile devices. The switcher now also 
      preserves the original request path when performing a site switch.

    - Users can indicate their site preference explicitly by submitting a site_preference query parameter. The 
      indicated preference will be honored by the SiteSwitcher. The preference value will be saved to a 
      SitePreferenceRepository. A CookieSitePreferenceRepository strategy is provided.

    - An indicated SitePreference is resolved to an Enum that is available as a 'currentSitePreference' request 
      attribute and injectable to @Controller methods. Its value can be used to vary controller logic by site 
      preference.

    - Added convenient factory methods for constructing site switchers that implement common scenarios:
          Scenario #1: The mobile site is addressed at a "mDot" domain e.g. m.myapp.com.
          Scenario #2: The mobile site is addressed at a "dotMobi" domain e.g. myapp.mobi.
          For both of those scenarios, the SitePreferenceRepository is cookie-based and the cookie is shared across 
          the site domains. See https://github.com/spring-projects/spring-mobile-samples for sample projects that 
          demonstrate the site switcher.

* Renamed DeviceResolvingHandlerInterceptor to DeviceResolverHandlerInterceptor to make it more clear this class is a 
  Spring MVC adapter wrapping a DeviceResolver.

1.0.0.M1 (2010.11.16)
=====================
* Initial release
* Added 'spring-mobile-device' module for mobile device detection.
* Added LiteDeviceResolver that detects mobile device presence but not capabilities.
* Added WurflDeviceResolver that detects mobile device presence as well as capabilities; requires 
  net.sourceforge.wurfl:wurfl to be present in the classpath.
* Added 'http://www.springframework.org/schema/mobile/spring-mobile-device' namespace with a convenient 
  'wurfl-device-resolver' tag for configuring a WurflDeviceResolver.
* Added DeviceResolvingHandlerInterceptor that, on preHandle, resolves the Device that originated the current web 
  request.
* Added DeviceWebArgumentResolver that allows the currentDevice to be injected as a @Controller handler method argument.
* Added a MobileRedirectHandlerInterceptor that, on preHandle, redirects to a dedicated mobile site if the 
  currentDevice isMobile().
* Added a WngViewResolver that allows WUrfl's "Wall NG" tag library to be used to author pages in one markup and have 
  it rendered in different grades (WML, XHTML Simple, XHTML Advanced).