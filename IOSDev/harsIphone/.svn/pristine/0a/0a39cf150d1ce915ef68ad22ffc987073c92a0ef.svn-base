//
//  SBCXListViewController.m
//  huaianZSRS
//
//  Created by Kyo-PC on 14-11-4.
//  Copyright (c) 2014年 Kyo-PC. All rights reserved.
//

#import "SBCXListViewController.h"
#import "HttpUtil.h"
#import "sbcxTableViewCell.h"
#import "ylDetailViewController.h"
#import "ybDetailViewController.h"
#import "ybskmxViewController.h"
@interface SBCXListViewController ()

@end

@implementation SBCXListViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    if ([[self getFlag] isEqualToString:@"ylcx"]) {
        _titleLabel.text = @"养老查询";
    }
    if ([[self getFlag] isEqualToString:@"ybcx"]) {
        _titleLabel.text = @"医保查询";
    }
    if ([[self getFlag] isEqualToString:@"ybmx"]) {
        _titleLabel.text = @"医保卡刷卡明细";
    }
    [self.showTableView setTableFooterView:[[UIView alloc]initWithFrame:CGRectZero]];
    // Do any additional setup after loading the view.

    
}
-(void) viewDidAppear:(BOOL)animated{
    
    dispatch_queue_t queue =
    dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
    dispatch_async(queue, ^{
        __block NSArray *httpArray;
        dispatch_group_t group =dispatch_group_create();
        dispatch_group_async(group, queue, ^{
            httpArray = [self getHttpJson:[self getKeyWord1] keyWord2:[self getKeyWord2]];
        });
        dispatch_group_notify(group, queue, ^{
            dispatch_async(dispatch_get_main_queue(), ^{
                if (httpArray == nil) {
                    _showNoneMessage.hidden = NO;
                }else{
                [self freshUI:httpArray];
                }
                [_waiting stopAnimating];
            });
        });
    });
    
}
-(void) freshUI:(NSArray *)getArray{
    self.dataList = [[NSMutableArray alloc]initWithArray:getArray];
    [self setCount: [self.dataList count]];
    [self.showTableView reloadData];
    [self.showTableView setTableFooterView:[[UIView alloc]initWithFrame:CGRectZero]];
    
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/
-(NSArray *)getHttpJson:(NSString*)keyword1
               keyWord2:(NSString*)keyword2{
    
    NSString *JsonURLString;
    JsonURLString = [NSString stringWithFormat:@"%@%@",[HttpUtil getUrl],@"zsrs-sb/yb/ybAction!grzh"];
    NSURL *url = [NSURL URLWithString:JsonURLString];
    //创建请求
    NSMutableURLRequest *request = [[NSMutableURLRequest alloc]initWithURL:url cachePolicy:NSURLRequestUseProtocolCachePolicy timeoutInterval:10];
    [request setHTTPMethod:@"POST"];//设置请求方式为POST，默认为GET
    
    NSString *str ;//设置参数
        str = [NSString stringWithFormat:@"man.name=%@&man.cardNo=%@",[self getKeyWord1],[self getKeyWord2]];
    
    NSData *data1 = [str dataUsingEncoding:NSUTF8StringEncoding];
    [request setHTTPBody:data1];
    //第三步，连接服务器
    NSData *received = [NSURLConnection sendSynchronousRequest:request returningResponse:nil error:nil];
    NSString *str1 = [[NSString alloc]initWithData:received encoding:NSUTF8StringEncoding];
    NSString *jsonstring = str1;
    NSData *data = [jsonstring dataUsingEncoding:NSUTF8StringEncoding];
    NSArray *getData = [NSJSONSerialization JSONObjectWithData:data
                                                       options:NSJSONReadingAllowFragments
                                                         error:nil];
    return getData;
}
- (IBAction)dismissSelf:(id)sender {
    [self dismissViewControllerAnimated:YES completion:nil];
}

-(NSInteger) tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return [self getCount];
}
-(UITableViewCell *) tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    NSString *CellTableIdentifier;
    UINib *nib;
    CellTableIdentifier = @"sbcxTableCell";
    nib =[UINib nibWithNibName:@"sbcxTableViewCell" bundle:nil];
    [tableView registerNib:nib forCellReuseIdentifier:CellTableIdentifier];
    
    sbcxTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellTableIdentifier];
    
    NSDictionary *rowData = self.dataList[indexPath.row];
    cell.name = rowData[@"aac003"];
    cell.iDCard= rowData[@"aac001"];
    cell.company = rowData[@"aab004"];
    cell.companyNum = rowData[@"aab001"];
    
    return cell;
}
-(CGFloat) tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UITableViewCell *cell = [self tableView:tableView cellForRowAtIndexPath:indexPath];
    return cell.frame.size.height;
}
-(void) tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    NSDictionary *rowData = self.dataList[indexPath.row];
    NSString *grbh = rowData[@"aac001"];
    UIStoryboard *mainStory = [UIStoryboard storyboardWithName:@"MainStory" bundle:nil];
    if ([[self getFlag] isEqualToString:@"ylcx"]) {
        ylDetailViewController *listView = [mainStory instantiateViewControllerWithIdentifier:@"ylDetailView"];
        [listView setGrbh:grbh];
        listView.modalTransitionStyle = UIModalTransitionStyleFlipHorizontal;
        [self presentViewController:listView animated:YES completion:nil];
    }
    if ([[self getFlag] isEqualToString:@"ybcx"]) {
        ybDetailViewController *listView = [mainStory instantiateViewControllerWithIdentifier:@"ybDetailView"];
        [listView setGrbh:grbh];
        listView.modalTransitionStyle = UIModalTransitionStyleFlipHorizontal;
        [self presentViewController:listView animated:YES completion:nil];
    }
    if ([[self getFlag] isEqualToString:@"ybmx"]) {
        ybskmxViewController *listView = [mainStory instantiateViewControllerWithIdentifier:@"ybskmxView"];
        [listView setGrbh:grbh];
        listView.modalTransitionStyle = UIModalTransitionStyleFlipHorizontal;
        [self presentViewController:listView animated:YES completion:nil];
    }
}
-(void) setFlag:(NSString *)flag
{
    _flag = [flag copy];
}
-(NSString*) getFlag
{
    return _flag;
}
-(void) setKeyWord1:(NSString *)keyWord1
{
    _keyWord1 = [keyWord1 copy];
}
-(NSString*) getKeyWord1
{
    return _keyWord1;
}
-(void) setKeyWord2:(NSString *)keyWord2
{
    _keyWord2 = [keyWord2 copy];
}
-(NSString*) getKeyWord2
{
    return  _keyWord2;
}
-(void) setCount:(int)count
{
    _count = count;
}
-(int) getCount
{
    return _count;
}
@end

